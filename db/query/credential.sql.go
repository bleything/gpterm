// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2
// source: credential.sql

package query

import (
	"context"
)

const getCredential = `-- name: GetCredential :one
SELECT value FROM credential
WHERE name=? LIMIT 1
`

func (q *Queries) GetCredential(ctx context.Context, name string) (string, error) {
	row := q.queryRow(ctx, q.getCredentialStmt, getCredential, name)
	var value string
	err := row.Scan(&value)
	return value, err
}

const updateCredential = `-- name: UpdateCredential :exec
INSERT OR REPLACE INTO credential (name, value) VALUES (?, ?)
`

type UpdateCredentialParams struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

func (q *Queries) UpdateCredential(ctx context.Context, arg UpdateCredentialParams) error {
	_, err := q.exec(ctx, q.updateCredentialStmt, updateCredential, arg.Name, arg.Value)
	return err
}
